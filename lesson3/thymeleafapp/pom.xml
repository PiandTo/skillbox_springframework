<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>edu.skillbox</groupId>
	<artifactId>thymeleafapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>thymeleafapp</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<frontend-maven-plugin.version>1.12.0</frontend-maven-plugin.version>
		<npmVersion>8.1.2</npmVersion>
		<nodeVersion>v16.13.1</nodeVersion>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-maven-plugin -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<version>3.2.5</version>
		</dependency>

		<dependency>
		<groupId>org.modelmapper</groupId>
		<artifactId>modelmapper</artifactId>
		<version>3.0.0</version>
		</dependency>

		<!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
		</dependency> -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
	</dependencies>

	<build>
		<!-- <resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.html</exclude>
					<exclude>**/*.css</exclude>
					<exclude>**/*.js</exclude>
				</excludes>
			</resource>
		</resources> -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<!-- Use the latest released version:
					https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
					<version>${frontend-maven-plugin.version}</version>
					<executions>
						<execution>
							<!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
							<id>install node and npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<!-- optional: default phase is "generate-resources" -->
							<!-- <phase>generate-resources</phase> -->
							<configuration>
								<nodeVersion>${nodeVersion}</nodeVersion>

								<!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
								<npmVersion>${npmVersion}</npmVersion>
								
								<!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
								<!-- <downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot> -->
							</configuration>
						</execution>
						<execution>
							<id>run-gulp-build</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<!-- optional: default phase is "generate-resources" -->
							<!-- <phase>generate-resources</phase> -->

							<configuration>
								<!-- optional: The default argument is actually
								"install", so unless you need to run some other npm command,
								you can remove this whole <configuration> section.
								-->
								<arguments>run build</arguments>
							</configuration>
						</execution>
						<!-- <execution>
							<id>gulp build</id>
							<goals>
								<goal>gulp</goal>
							</goals>
							<phase>generate-resources</phase>
							<configuration>
								<arguments>build</arguments>
							</configuration>
						</execution> -->
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
		    <!-- <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
            </plugin>  -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<image>
						<name>docker.io/${project.name}</name>
						<env><BP_JVM_VERSION>${java.version}</BP_JVM_VERSION></env>
					</image>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
